/*! tailwindcss v4.0.9 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
    :root,
    :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
            'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
            'Liberation Mono', 'Courier New', monospace;
        --color-gray-400: oklch(0.707 0.022 261.325);
        --color-zinc-50: oklch(0.985 0 0);
        --color-zinc-300: oklch(0.871 0.006 286.286);
        --color-zinc-400: oklch(0.705 0.015 286.067);
        --color-zinc-500: oklch(0.552 0.016 285.938);
        --color-zinc-800: oklch(0.274 0.006 286.033);
        --color-black: #000;
        --color-white: #fff;
        --spacing: 0.25rem;
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --radius-md: 0.375rem;
        --radius-lg: 0.5rem;
        --ease-in: cubic-bezier(0.4, 0, 1, 1);
        --ease-out: cubic-bezier(0, 0, 0.2, 1);
        --animate-bounce: bounce 1s infinite;
        --default-transition-duration: 150ms;
        --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        --default-font-family: var(--font-sans);
        --default-font-feature-settings: var(
            --font-sans--font-feature-settings
        );
        --default-font-variation-settings: var(
            --font-sans--font-variation-settings
        );
        --default-mono-font-family: var(--font-mono);
        --default-mono-font-feature-settings: var(
            --font-mono--font-feature-settings
        );
        --default-mono-font-variation-settings: var(
            --font-mono--font-variation-settings
        );
    }
}
@layer base {
    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0 solid;
    }
    html,
    :host {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        font-family: var(
            --default-font-family,
            ui-sans-serif,
            system-ui,
            sans-serif,
            'Apple Color Emoji',
            'Segoe UI Emoji',
            'Segoe UI Symbol',
            'Noto Color Emoji'
        );
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }
    body {
        line-height: inherit;
    }
    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }
    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit;
    }
    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }
    b,
    strong {
        font-weight: bolder;
    }
    code,
    kbd,
    samp,
    pre {
        font-family: var(
            --default-mono-font-family,
            ui-monospace,
            SFMono-Regular,
            Menlo,
            Monaco,
            Consolas,
            'Liberation Mono',
            'Courier New',
            monospace
        );
        font-feature-settings: var(
            --default-mono-font-feature-settings,
            normal
        );
        font-variation-settings: var(
            --default-mono-font-variation-settings,
            normal
        );
        font-size: 1em;
    }
    small {
        font-size: 80%;
    }
    sub,
    sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }
    sub {
        bottom: -0.25em;
    }
    sup {
        top: -0.5em;
    }
    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }
    :-moz-focusring {
        outline: auto;
    }
    progress {
        vertical-align: baseline;
    }
    summary {
        display: list-item;
    }
    ol,
    ul,
    menu {
        list-style: none;
    }
    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        display: block;
        vertical-align: middle;
    }
    img,
    video {
        max-width: 100%;
        height: auto;
    }
    button,
    input,
    select,
    optgroup,
    textarea,
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        border-radius: 0;
        background-color: transparent;
        opacity: 1;
    }
    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }
    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }
    ::file-selector-button {
        margin-inline-end: 4px;
    }
    ::placeholder {
        opacity: 1;
        color: color-mix(in oklab, currentColor 50%, transparent);
    }
    textarea {
        resize: vertical;
    }
    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }
    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }
    ::-webkit-datetime-edit {
        display: inline-flex;
    }
    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }
    ::-webkit-datetime-edit,
    ::-webkit-datetime-edit-year-field,
    ::-webkit-datetime-edit-month-field,
    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-minute-field,
    ::-webkit-datetime-edit-second-field,
    ::-webkit-datetime-edit-millisecond-field,
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }
    :-moz-ui-invalid {
        box-shadow: none;
    }
    button,
    input:where([type='button'], [type='reset'], [type='submit']),
    ::file-selector-button {
        appearance: button;
    }
    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto;
    }
    [hidden]:where(:not([hidden='until-found'])) {
        display: none !important;
    }
}
@layer utilities {
    .pointer-events-none {
        pointer-events: none;
    }
    .absolute {
        position: absolute;
    }
    .relative {
        position: relative;
    }
    .sticky {
        position: sticky;
    }
    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }
    .top-0 {
        top: calc(var(--spacing) * 0);
    }
    .right-0 {
        right: calc(var(--spacing) * 0);
    }
    .bottom-4 {
        bottom: calc(var(--spacing) * 4);
    }
    .z-10 {
        z-index: 10;
    }
    .mx-auto {
        margin-inline: auto;
    }
    .mt-0\.5 {
        margin-top: calc(var(--spacing) * 0.5);
    }
    .mt-auto {
        margin-top: auto;
    }
    .-mr-1 {
        margin-right: calc(var(--spacing) * -1);
    }
    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }
    .block {
        display: block;
    }
    .flex {
        display: flex;
    }
    .grid {
        display: grid;
    }
    .inline-block {
        display: inline-block;
    }
    .inline-flex {
        display: inline-flex;
    }
    .size-5 {
        width: calc(var(--spacing) * 5);
        height: calc(var(--spacing) * 5);
    }
    .h-6 {
        height: calc(var(--spacing) * 6);
    }
    .h-auto {
        height: auto;
    }
    .h-screen {
        height: 100vh;
    }
    .min-h-screen {
        min-height: 100vh;
    }
    .w-6 {
        width: calc(var(--spacing) * 6);
    }
    .w-56 {
        width: calc(var(--spacing) * 56);
    }
    .w-full {
        width: 100%;
    }
    .max-w-full {
        max-width: 100%;
    }
    .flex-grow {
        flex-grow: 1;
    }
    .origin-top-right {
        transform-origin: top right;
    }
    .animate-bounce {
        animation: var(--animate-bounce);
    }
    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    .flex-col {
        flex-direction: column;
    }
    .items-center {
        align-items: center;
    }
    .justify-between {
        justify-content: space-between;
    }
    .justify-center {
        justify-content: center;
    }
    .justify-end {
        justify-content: flex-end;
    }
    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }
    .gap-x-1\.5 {
        column-gap: calc(var(--spacing) * 1.5);
    }
    .space-x-4 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(
                calc(var(--spacing) * 4) * var(--tw-space-x-reverse)
            );
            margin-inline-end: calc(
                calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
            );
        }
    }
    .rounded-lg {
        border-radius: var(--radius-lg);
    }
    .rounded-md {
        border-radius: var(--radius-md);
    }
    .bg-black {
        background-color: var(--color-black);
    }
    .bg-black\/50 {
        background-color: color-mix(
            in oklab,
            var(--color-black) 50%,
            transparent
        );
    }
    .bg-cover {
        background-size: cover;
    }
    .bg-center {
        background-position: center;
    }
    .p-4 {
        padding: calc(var(--spacing) * 4);
    }
    .p-6 {
        padding: calc(var(--spacing) * 6);
    }
    .p-\[10\%\] {
        padding: 10%;
    }
    .px-4 {
        padding-inline: calc(var(--spacing) * 4);
    }
    .px-10 {
        padding-inline: calc(var(--spacing) * 10);
    }
    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }
    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }
    .py-3 {
        padding-block: calc(var(--spacing) * 3);
    }
    .text-center {
        text-align: center;
    }
    .text-left {
        text-align: left;
    }
    .text-6xl {
        font-size: var(--text-6xl);
        line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .text-gray-400 {
        color: var(--color-gray-400);
    }
    .text-white {
        color: var(--color-white);
    }
    .text-zinc-400 {
        color: var(--color-zinc-400);
    }
    .text-zinc-500 {
        color: var(--color-zinc-500);
    }
    .underline {
        text-decoration-line: underline;
    }
    .shadow-lg {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
            0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
    .ring-1 {
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
            calc(1px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
    .ring-black\/5 {
        --tw-ring-color: color-mix(
            in oklab,
            var(--color-black) 5%,
            transparent
        );
    }
    .ring-zinc-300 {
        --tw-ring-color: var(--color-zinc-300);
    }
    .transition {
        transition-property: color, background-color, border-color,
            outline-color, text-decoration-color, fill, stroke,
            --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity,
            box-shadow, transform, translate, scale, rotate, filter,
            -webkit-backdrop-filter, backdrop-filter;
        transition-timing-function: var(
            --tw-ease,
            var(--default-transition-timing-function)
        );
        transition-duration: var(
            --tw-duration,
            var(--default-transition-duration)
        );
    }
    .ring-inset {
        --tw-ring-inset: inset;
    }
    .hover\:bg-zinc-50 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-zinc-50);
            }
        }
    }
    .hover\:bg-zinc-800 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-zinc-800);
            }
        }
    }
    .hover\:text-black {
        &:hover {
            @media (hover: hover) {
                color: var(--color-black);
            }
        }
    }
    .hover\:text-white {
        &:hover {
            @media (hover: hover) {
                color: var(--color-white);
            }
        }
    }
    .focus\:outline-hidden {
        &:focus {
            outline-style: none;
            @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
            }
        }
    }
    .data-closed\:scale-95 {
        &[data-closed] {
            --tw-scale-x: 95%;
            --tw-scale-y: 95%;
            --tw-scale-z: 95%;
            scale: var(--tw-scale-x) var(--tw-scale-y);
        }
    }
    .data-closed\:transform {
        &[data-closed] {
            transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
                var(--tw-skew-x) var(--tw-skew-y);
        }
    }
    .data-closed\:opacity-0 {
        &[data-closed] {
            opacity: 0%;
        }
    }
    .data-enter\:duration-100 {
        &[data-enter] {
            --tw-duration: 100ms;
            transition-duration: 100ms;
        }
    }
    .data-enter\:ease-out {
        &[data-enter] {
            --tw-ease: var(--ease-out);
            transition-timing-function: var(--ease-out);
        }
    }
    .data-leave\:duration-75 {
        &[data-leave] {
            --tw-duration: 75ms;
            transition-duration: 75ms;
        }
    }
    .data-leave\:ease-in {
        &[data-leave] {
            --tw-ease: var(--ease-in);
            transition-timing-function: var(--ease-in);
        }
    }
    .md\:grid-cols-4 {
        @media (width >= 48rem) {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }
}
@property --tw-space-x-reverse {
    syntax: '*';
    inherits: false;
    initial-value: 0;
}
@property --tw-shadow {
    syntax: '*';
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
    syntax: '*';
    inherits: false;
}
@property --tw-inset-shadow {
    syntax: '*';
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
    syntax: '*';
    inherits: false;
}
@property --tw-ring-color {
    syntax: '*';
    inherits: false;
}
@property --tw-ring-shadow {
    syntax: '*';
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
    syntax: '*';
    inherits: false;
}
@property --tw-inset-ring-shadow {
    syntax: '*';
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
    syntax: '*';
    inherits: false;
}
@property --tw-ring-offset-width {
    syntax: '<length>';
    inherits: false;
    initial-value: 0px;
}
@property --tw-ring-offset-color {
    syntax: '*';
    inherits: false;
    initial-value: #fff;
}
@property --tw-ring-offset-shadow {
    syntax: '*';
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-scale-x {
    syntax: '*';
    inherits: false;
    initial-value: 1;
}
@property --tw-scale-y {
    syntax: '*';
    inherits: false;
    initial-value: 1;
}
@property --tw-scale-z {
    syntax: '*';
    inherits: false;
    initial-value: 1;
}
@property --tw-rotate-x {
    syntax: '*';
    inherits: false;
    initial-value: rotateX(0);
}
@property --tw-rotate-y {
    syntax: '*';
    inherits: false;
    initial-value: rotateY(0);
}
@property --tw-rotate-z {
    syntax: '*';
    inherits: false;
    initial-value: rotateZ(0);
}
@property --tw-skew-x {
    syntax: '*';
    inherits: false;
    initial-value: skewX(0);
}
@property --tw-skew-y {
    syntax: '*';
    inherits: false;
    initial-value: skewY(0);
}
@property --tw-duration {
    syntax: '*';
    inherits: false;
}
@property --tw-ease {
    syntax: '*';
    inherits: false;
}
@keyframes bounce {
    0%,
    100% {
        transform: translateY(-25%);
        animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
        transform: none;
        animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
}
