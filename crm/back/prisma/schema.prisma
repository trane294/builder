generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// model Customer {
//     id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
//     name      String    @db.VarChar(255)
//     email     String    @db.VarChar(255)
//     image_url String    @db.VarChar(255)
//     posts     Invoice[]
//     createdAt DateTime  @default(now()) @db.Timestamptz(6)
//     updatedAt DateTime? @updatedAt @db.Timestam√•ptz(6)
//     deletedAt DateTime? @db.Timestamptz(6)
// }

// model Invoice {
//     id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
//     customer_id String    @db.Uuid
//     customer    Customer  @relation(fields: [customer_id], references: [id])
//     amount      Int
//     status      String    @db.VarChar(255)
//     date        DateTime  @db.Date
//     createdAt   DateTime  @default(now()) @db.Timestamptz(6)
//     updatedAt   DateTime? @updatedAt @db.Timestamptz(6)
//     deletedAt   DateTime? @db.Timestamptz(6)
// }

// model Revenue {
//     month   String @unique @db.VarChar(4)
//     revenue Int
// }

model User {
    id        Int       @id @default(autoincrement())
    firstName String
    lastName  String
    email     String    @unique
    password  String
    phone     String?   @db.VarChar(255)
    createdAt DateTime  @default(now()) @db.Timestamptz(6)
    updatedAt DateTime? @updatedAt @db.Timestamptz(6)
    deletedAt DateTime? @db.Timestamptz(6)
    websites  Website[]
}

model Template {
    id          Int       @id @default(autoincrement())
    config      String    @db.VarChar(255)
    name        String    @db.VarChar(255)
    description String?
    createdAt   DateTime  @default(now()) @db.Timestamptz(6)
    updatedAt   DateTime? @updatedAt @db.Timestamptz(6)
    deletedAt   DateTime? @db.Timestamptz(6)
    Website     Website[]
}

model Website {
    id          Int       @id @default(autoincrement())
    name        String    @db.VarChar(255)
    description String?
    templateId Int
    template    Template  @relation(fields: [templateId], references: [id])
    userId     Int
    user        User      @relation(fields: [userId], references: [id])
    data        Json?
    createdAt   DateTime  @default(now()) @db.Timestamptz(6)
    updatedAt   DateTime? @updatedAt @db.Timestamptz(6)
    deletedAt   DateTime? @db.Timestamptz(6)
}